AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: An AWS Serverless Application Model template describing your function.
Resources:
  videoprocessing:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 1024
      Timeout: 300
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      EphemeralStorage:
        Size: 512
      Environment:
        Variables:
          debug: 'false'
          format: mp4
          output_bucket: badur-video-processing-output
          s3_output_prefix: previews
          sample_duration: '2'
          samples: '4'
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      Layers:
        - arn:aws:lambda:eu-north-1:175033217214:layer:ffmpeg:1
      PackageType: Zip
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: '*'
            - Effect: Allow
              Action:
                - s3:*
                - s3-object-lambda:*
              Resource: '*'
      RecursiveLoop: Terminate
      SnapStart:
        ApplyOn: None
      Tags:
        lambda:createdBy: SAM
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
      Events:
        S3Trigger:
          Type: S3
          Properties:
            Bucket: !Ref InputBucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: .mp4

  InputBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: badur-video-processing-input
      
  OutputBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: badur-video-processing-output